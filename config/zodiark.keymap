/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        bkspDEL {
            bindings = <&kp DELETE>;
            key-positions = <64 63>;
        };

        leftNUMPAD {
            bindings = <&tog 4>;
            key-positions = <61 60>;
        };
    };

    behaviors {
        td_quot: td_quot {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOT";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp SEMICOLON>;

            tapping-term-ms = <150>;
        };

        td_lbrc: td_lbrc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LBRC";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LEFT_BRACKET>;

            tapping-term-ms = <150>;
        };

        td_rbrc: td_rbrc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RBRC";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp RIGHT_BRACKET>;

            tapping-term-ms = <150>;
        };

        td_minus: td_minus {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MINUS";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp KP_DIVIDE>;

            tapping-term-ms = <150>;
        };

        td_plus: td_plus {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_PLUS";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp KP_PLUS>;

            tapping-term-ms = <150>;
        };

        td_question: td_question {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            tapping-term-ms = <150>;
        };

        TT_function: TT_function {
            compatible = "zmk,behavior-tap-dance";
            label = "TT_FUNCTION";
            #binding-cells = <0>;
            bindings = <&mo 4>, <&tog 4>;
        };

        td_bkspdel: td_bkspdel {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BKSPDEL";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                                  |  6   |  7    |  8    |  9   |   0   | BKSPC |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |   [    |                 |   ]   |  Y   |  U    |  I    |  O   |   P   |   \   |
            // |  CAPS |  A  |  S  |  D   |  F   |  G   |   -    |                 |   =   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   `    | MUTE  | | PRNT  |  DEL  |  N   |  M    |  ,    |  .   |   /   | ENTER |
            // | CTRL  | ALT | GUI | MENU | LOWER|     SPACE     | ENTER | | ENTER |    SPACE     | RAISE| LEFT  | DOWN  |  UP   | RIGHT |

            bindings = <
&kp GRAVE                  &kp N1   &kp N2    &kp N3  &kp N4     &kp N5                                                     &kp N6  &kp N7     &kp N8     &kp N9    &kp N0           &td_minus
&kp TAB                    &kp Q    &kp W     &kp E   &kp R      &kp T   &kp LBKT                                &kp RBKT   &kp Y   &kp U      &kp I      &kp O     &kp P            &td_plus
&kp LSHFT                  &kp A    &kp S     &kp D   &kp F      &kp G   &kp PG_DN                               &kp PG_UP  &kp H   &kp J      &kp K      &kp L     &td_quot         &mt RIGHT_SHIFT ESCAPE
&kp LSHFT                  &kp Z    &kp X     &kp C   &kp V      &kp B   &TT_function  &kp C_MUTE     &kp PSCRN  &kp DEL    &kp N   &kp M      &td_lbrc   &td_rbrc  &td_question     &mt RIGHT_SHIFT ESC
&mt LALT LEFT_PARENTHESIS  &kp ESC  &kp LGUI  &tog 1  &kp LCTRL          &kp SPACE     &lt 3 ENTER    &kp BSPC   &kp SPACE          &kp RSHFT  &kp RCTRL  &tog 3    &kp PRINTSCREEN  &mt RIGHT_ALT RIGHT_PARENTHESIS
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Art {
            bindings = <
&kp LC(LALT)  &kp ESC  &kp LC(D)  &kp LCTRL  &kp LSHFT  &kp P                                          &none  &none   &kp FSLH  &kp FSLH  &kp STAR  &kp MINUS
&kp SPACE     &kp TAB  &kp F      &kp E      &kp Z      &kp C     &kp LBKT                     &none   &none  &none   &kp N7    &kp N8    &kp N9    &kp PLUS
&kp LALT      &kp Y    &kp D      &kp LC(Z)  &kp F2     &kp T     &kp RBKT                     &none   &none  &none   &kp N4    &kp N5    &kp N6    &td_bkspdel
&kp L         &kp U    &kp W      &kp X      &kp H      &kp LALT  &trans     &trans    &trans  &trans  &none  &none   &kp N1    &kp N2    &kp N3    &kp RET
&none         &none    &kp N5     &trans     &mo 2                &kp SPACE  &mo 2     &trans  &trans         &trans  &kp N0    &kp DOT   &trans    &trans
            >;

            sensor-bindings =
                <&inc_dec_kp PG_UP PAGE_DOWN>,
                <&inc_dec_kp LEFT_BRACKET RIGHT_BRACKET>;
        };

        Art_Duo {
            bindings = <
&kp N4  &kp N5     &kp LC(A)  &kp LC(C)  &kp LC(V)  &kp F7                                     &trans  &trans  &trans  &trans  &trans  &trans
&kp N3  &kp F6     &kp F1     &kp J      &kp G      &kp Q   &kp DEL                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp N2  &kp F8     &kp N      &kp LC(Y)  &kp DOT    &kp A   &kp END                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp M   &kp LC(S)  &kp V      &kp B      &kp N1     &trans  &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans             &trans   &trans    &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp END DELETE>,
                <&inc_dec_kp LC(Y) LC(Z)>;
        };

        alt {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR  | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                                  |      |       |       |      |       | RESET |
            // |       |     |     |      |      |      |        |                 |       |      |       |       |      |       |BLOADER|
            // |       |     |     |      |      |      |        |                 |       |      |       |       |      |       |       |
            // |       |     |     |      |      |      |        |       | |       |       |      |       |       |      |       |       |
            // |       |     |     |      |      |               |       | |       |              |       |       |      |       |       |

            bindings = <
&kp ESC   &kp ESC    &kp LG(LS(S))   &kp LC(C)         &kp LC(Z)      &kp LC(V)                                      &trans  &trans  &kp KP_NUMLOCK  &kp FSLH  &kp STAR  &kp MINUS
&kp TAB   &kp ESC    &kp LC(LEFT)    &kp UP            &kp LC(RIGHT)  &kp PG_UP  &kp HOME                    &trans  &trans  &trans  &kp N7          &kp N8    &kp N9    &kp PLUS
&kp CAPS  &kp LCTRL  &kp LEFT        &kp DOWN          &kp RIGHT      &kp PG_DN  &kp END                     &trans  &trans  &trans  &kp N4          &kp N5    &kp N6    &td_bkspdel
&trans    &kp LSHFT  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT     &kp K_APP  &kp DEL   &trans    &trans  &trans  &trans  &trans  &kp N1          &kp N2    &kp N3    &kp RET
&trans    &trans     &trans          &trans            &trans                    &kp BSPC  &trans    &trans  &to 0           &trans  &kp N0          &kp DOT   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        function {
            bindings = <
&kp F13  &kp F14  &kp F15  &kp F1   &kp F2   &kp F3                                               &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp F16  &kp F17  &kp F18  &kp F4   &kp F5   &kp F6   &kp LEFT_ALT                        &trans  &trans      &trans        &trans        &trans        &trans        &trans
&kp F19  &kp F20  &kp F21  &kp F7   &kp F8   &kp F9   &kp LEFT_CONTROL                    &trans  &trans      &trans        &trans        &trans        &trans        &trans
&kp F22  &kp F23  &kp F24  &kp F10  &kp F11  &kp F12  &to 0             &trans    &trans  &trans  &trans      &trans        &trans        &trans        &trans        &trans
&trans   &trans   &trans   &trans   &trans            &trans            &trans    &trans  &to 0               &trans        &trans        &trans        &trans        &trans
            >;
        };

        left_NUMPAD {
            bindings = <
&trans  &trans  &kp KP_NUMLOCK  &kp FSLH  &kp STAR  &kp MINUS                                      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N7          &kp N8    &kp N9    &kp PLUS     &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N4          &kp N5    &kp N6    &td_bkspdel  &trans                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N1          &kp N2    &kp N3    &kp RET      &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N0          &kp DOT   &trans                 &trans  &trans    &trans  &to 0           &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
